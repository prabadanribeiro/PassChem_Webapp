var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import React, { createContext, useReducer } from "react";
import { initialPDFState, reducer, } from "./reducer";
var PDFContext = createContext({ state: initialPDFState, dispatch: function () { return null; } });
var PDFProvider = function (_a) {
    var children = _a.children, mainState = _a.mainState;
    var _b = useReducer(reducer, __assign(__assign({}, initialPDFState), { mainState: mainState })), state = _b[0], dispatch = _b[1];
    return (React.createElement(PDFContext.Provider, { value: { state: state, dispatch: dispatch } }, children));
};
export { PDFContext, PDFProvider };
